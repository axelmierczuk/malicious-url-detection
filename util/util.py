import os


class TYPE:
    train: str = "train"
    validation: str = "validation"
    test: str = "test"


class Models:
    lexicographical: str = "lex"
    raw: str = "raw"
    all: str = "all"

    def __init__(self, arg):
        if arg == Models.all:
            self.current_models = [Models.lexicographical, Models.raw]
        else:
            self.current_models = [arg]

obj = {
    0: [0, 0, 0, 0, 0, 0, 0],
    1: [0, 0, 0, 0, 0, 0, 1],
    2: [0, 0, 0, 0, 0, 1, 0],
    3: [0, 0, 0, 0, 0, 1, 1],
    4: [0, 0, 0, 0, 1, 0, 0],
    5: [0, 0, 0, 0, 1, 0, 1],
    6: [0, 0, 0, 0, 1, 1, 0],
    7: [0, 0, 0, 0, 1, 1, 1],
    8: [0, 0, 0, 1, 0, 0, 0],
    9: [0, 0, 0, 1, 0, 0, 1],
    10: [0, 0, 0, 1, 0, 1, 0],
    11: [0, 0, 0, 1, 0, 1, 1],
    12: [0, 0, 0, 1, 1, 0, 0],
    13: [0, 0, 0, 1, 1, 0, 1],
    14: [0, 0, 0, 1, 1, 1, 0],
    15: [0, 0, 0, 1, 1, 1, 1],
    16: [0, 0, 1, 0, 0, 0, 0],
    17: [0, 0, 1, 0, 0, 0, 1],
    18: [0, 0, 1, 0, 0, 1, 0],
    19: [0, 0, 1, 0, 0, 1, 1],
    20: [0, 0, 1, 0, 1, 0, 0],
    21: [0, 0, 1, 0, 1, 0, 1],
    22: [0, 0, 1, 0, 1, 1, 0],
    23: [0, 0, 1, 0, 1, 1, 1],
    24: [0, 0, 1, 1, 0, 0, 0],
    25: [0, 0, 1, 1, 0, 0, 1],
    26: [0, 0, 1, 1, 0, 1, 0],
    27: [0, 0, 1, 1, 0, 1, 1],
    28: [0, 0, 1, 1, 1, 0, 0],
    29: [0, 0, 1, 1, 1, 0, 1],
    30: [0, 0, 1, 1, 1, 1, 0],
    31: [0, 0, 1, 1, 1, 1, 1],
    32: [0, 1, 0, 0, 0, 0, 0],
    33: [0, 1, 0, 0, 0, 0, 1],
    34: [0, 1, 0, 0, 0, 1, 0],
    35: [0, 1, 0, 0, 0, 1, 1],
    36: [0, 1, 0, 0, 1, 0, 0],
    37: [0, 1, 0, 0, 1, 0, 1],
    38: [0, 1, 0, 0, 1, 1, 0],
    39: [0, 1, 0, 0, 1, 1, 1],
    40: [0, 1, 0, 1, 0, 0, 0],
    41: [0, 1, 0, 1, 0, 0, 1],
    42: [0, 1, 0, 1, 0, 1, 0],
    43: [0, 1, 0, 1, 0, 1, 1],
    44: [0, 1, 0, 1, 1, 0, 0],
    45: [0, 1, 0, 1, 1, 0, 1],
    46: [0, 1, 0, 1, 1, 1, 0],
    47: [0, 1, 0, 1, 1, 1, 1],
    48: [0, 1, 1, 0, 0, 0, 0],
    49: [0, 1, 1, 0, 0, 0, 1],
    50: [0, 1, 1, 0, 0, 1, 0],
    51: [0, 1, 1, 0, 0, 1, 1],
    52: [0, 1, 1, 0, 1, 0, 0],
    53: [0, 1, 1, 0, 1, 0, 1],
    54: [0, 1, 1, 0, 1, 1, 0],
    55: [0, 1, 1, 0, 1, 1, 1],
    56: [0, 1, 1, 1, 0, 0, 0],
    57: [0, 1, 1, 1, 0, 0, 1],
    58: [0, 1, 1, 1, 0, 1, 0],
    59: [0, 1, 1, 1, 0, 1, 1],
    60: [0, 1, 1, 1, 1, 0, 0],
    61: [0, 1, 1, 1, 1, 0, 1],
    62: [0, 1, 1, 1, 1, 1, 0],
    63: [0, 1, 1, 1, 1, 1, 1],
    64: [1, 0, 0, 0, 0, 0, 0],
    65: [1, 0, 0, 0, 0, 0, 1],
    66: [1, 0, 0, 0, 0, 1, 0],
    67: [1, 0, 0, 0, 0, 1, 1],
    68: [1, 0, 0, 0, 1, 0, 0],
    69: [1, 0, 0, 0, 1, 0, 1],
    70: [1, 0, 0, 0, 1, 1, 0],
    71: [1, 0, 0, 0, 1, 1, 1],
    72: [1, 0, 0, 1, 0, 0, 0],
    73: [1, 0, 0, 1, 0, 0, 1],
    74: [1, 0, 0, 1, 0, 1, 0],
    75: [1, 0, 0, 1, 0, 1, 1],
    76: [1, 0, 0, 1, 1, 0, 0],
    77: [1, 0, 0, 1, 1, 0, 1],
    78: [1, 0, 0, 1, 1, 1, 0],
    79: [1, 0, 0, 1, 1, 1, 1],
    80: [1, 0, 1, 0, 0, 0, 0],
    81: [1, 0, 1, 0, 0, 0, 1],
    82: [1, 0, 1, 0, 0, 1, 0],
    83: [1, 0, 1, 0, 0, 1, 1],
    84: [1, 0, 1, 0, 1, 0, 0],
    85: [1, 0, 1, 0, 1, 0, 1],
    86: [1, 0, 1, 0, 1, 1, 0],
    87: [1, 0, 1, 0, 1, 1, 1],
    88: [1, 0, 1, 1, 0, 0, 0],
    89: [1, 0, 1, 1, 0, 0, 1],
    90: [1, 0, 1, 1, 0, 1, 0],
    91: [1, 0, 1, 1, 0, 1, 1],
    92: [1, 0, 1, 1, 1, 0, 0],
    93: [1, 0, 1, 1, 1, 0, 1],
    94: [1, 0, 1, 1, 1, 1, 0],
    95: [1, 0, 1, 1, 1, 1, 1],
    96: [1, 1, 0, 0, 0, 0, 0],
    97: [1, 1, 0, 0, 0, 0, 1],
    98: [1, 1, 0, 0, 0, 1, 0],
    99: [1, 1, 0, 0, 0, 1, 1],
    100: [1, 1, 0, 0, 1, 0, 0],
    101: [1, 1, 0, 0, 1, 0, 1],
    102: [1, 1, 0, 0, 1, 1, 0],
    103: [1, 1, 0, 0, 1, 1, 1],
    104: [1, 1, 0, 1, 0, 0, 0],
    105: [1, 1, 0, 1, 0, 0, 1],
    106: [1, 1, 0, 1, 0, 1, 0],
    107: [1, 1, 0, 1, 0, 1, 1],
    108: [1, 1, 0, 1, 1, 0, 0],
    109: [1, 1, 0, 1, 1, 0, 1],
    110: [1, 1, 0, 1, 1, 1, 0],
    111: [1, 1, 0, 1, 1, 1, 1],
    112: [1, 1, 1, 0, 0, 0, 0],
    113: [1, 1, 1, 0, 0, 0, 1],
    114: [1, 1, 1, 0, 0, 1, 0],
    115: [1, 1, 1, 0, 0, 1, 1],
    116: [1, 1, 1, 0, 1, 0, 0],
    117: [1, 1, 1, 0, 1, 0, 1],
    118: [1, 1, 1, 0, 1, 1, 0],
    119: [1, 1, 1, 0, 1, 1, 1],
    120: [1, 1, 1, 1, 0, 0, 0],
    121: [1, 1, 1, 1, 0, 0, 1],
    122: [1, 1, 1, 1, 0, 1, 0],
    123: [1, 1, 1, 1, 0, 1, 1],
    124: [1, 1, 1, 1, 1, 0, 0],
    125: [1, 1, 1, 1, 1, 0, 1],
    126: [1, 1, 1, 1, 1, 1, 0],
    127: [1, 1, 1, 1, 1, 1, 1]
}


def get_characters():
    return obj


def get_args():
    return [Models.all, Models.raw, Models.lexicographical]


def get_save_loc(m):
    f = "models/" + m + "/"
    is_f = os.path.isdir(f)
    if not is_f:
        os.makedirs(f)
    return f
